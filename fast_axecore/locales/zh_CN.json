{
  "lang": "zh-CN",
  "rules": {
    "accesskeys": {
      "description": "确保每个accesskey属性值是唯一的",
      "help": "accesskey属性值应该是唯一的"
      },
    "area-alt": {
    "description": "确保图像映射的<area>元素具有替代文本",
    "help": "活动的<area>元素必须有替代文本"
    },
    "aria-allowed-attr": {
    "description": "确保ARIA属性在元素的角色中允许使用",
    "help": "元素只能使用允许的ARIA属性"
    },
    "aria-allowed-role": {
    "description": "确保role属性对于元素来说具有适当的值",
    "help": "ARIA角色应该适合该元素"
    },
    "aria-command-name": {
      "description": "确保每个ARIA按钮、链接和菜单项都有一个可访问的名称",
      "help": "ARIA命令必须有一个可访问的名称"
      },
      "aria-dialog-name": {
      "description": "确保每个ARIA dialog和alertdialog节点都有一个可访问的名称",
      "help": "ARIA dialog和alertdialog节点应该有一个可访问的名称"
      },
      "aria-hidden-body": {
      "description": "确保文档主体上不存在aria-hidden='true'属性",
      "help": "文档主体上不能存在aria-hidden='true'属性"
      },
      "aria-hidden-focus": {
      "description": "确保aria-hidden元素不可聚焦，也不包含可聚焦的元素",
      "help": "ARIA隐藏元素不能可聚焦，也不能包含可聚焦的元素"
    },
    "aria-input-field-name": {
      "description": "确保每个ARIA输入字段都有一个可访问的名称",
      "help": "ARIA输入字段必须有一个可访问的名称"
      },
      "aria-meter-name": {
      "description": "确保每个ARIA meter节点都有一个可访问的名称",
      "help": "ARIA meter节点必须有一个可访问的名称"
      },
      "aria-progressbar-name": {
      "description": "确保每个ARIA progressbar节点都有一个可访问的名称",
      "help": "ARIA progressbar节点必须有一个可访问的名称"
      },
      "aria-required-attr": {
      "description": "确保具有ARIA角色的元素具有所有必需的ARIA属性",
      "help": "必需的ARIA属性必须提供"
      },
      "aria-required-children": {
      "description": "确保需要子角色的具有ARIA角色的元素包含它们",
      "help": "某些ARIA角色必须包含特定的子角色"
      },
      "aria-required-parent": {
      "description": "确保需要父角色的具有ARIA角色的元素被它们所包含",
      "help": "某些ARIA角色必须被特定的父角色所包含"
    },
    "aria-roledescription": {
      "description": "确保aria-roledescription仅用于具有隐含或显式角色的元素",
      "help": "aria-roledescription必须用于具有语义角色的元素"
      },
      "aria-roles": {
      "description": "确保具有role属性的所有元素使用有效的值",
      "help": "使用的ARIA角色必须符合有效值"
      },
      "aria-text": {
        "description": "确保\"role=text\"仅用于没有可聚焦后代的元素",
        "help": "\"role=text\"不应该有可聚焦的后代元素"
      },
      "aria-toggle-field-name": {
      "description": "确保每个ARIA切换字段都有一个可访问的名称",
      "help": "ARIA切换字段必须有一个可访问的名称"
    },
    "aria-tooltip-name": {
      "description": "确保每个ARIA工具提示节点都有一个可访问的名称",
      "help": "ARIA工具提示节点必须有一个可访问的名称"
    },
    "aria-treeitem-name": {
      "description": "确保每个ARIA树项节点都有一个可访问的名称",
      "help": "ARIA树项节点应该有一个可访问的名称"
    },
    "aria-valid-attr-value": {
      "description": "确保所有ARIA属性都有有效的值",
      "help": "ARIA属性必须符合有效值"
    },
    "aria-valid-attr": {
      "description": "确保以aria-开头的属性是有效的ARIA属性",
      "help": "ARIA属性必须符合有效的名称"
    },
    "audio-caption": {
      "description": "确保<audio>元素有字幕",
      "help": "<audio>元素必须有字幕轨道"
    },
    "autocomplete-valid": {
      "description": "确保自动完成属性对表单字段正确且适用",
      "help": "autocomplete属性必须正确使用"
    },
    "avoid-inline-spacing": {
      "description": "确保通过样式属性设置的文本间距可以通过自定义样式表调整",
      "help": "内联文本间距必须能够通过自定义样式表调整"
    },
    "blink": {
      "description": "确保不使用<blink>元素",
      "help": "<blink>元素已被弃用，不得使用"
    },
    "button-name": {
      "description": "确保按钮具有可辨识的文本",
      "help": "按钮必须具有可辨识的文本"
    },
    "bypass": {
      "description": "确保每个页面至少有一种机制让用户跳过导航直接跳转到内容",
      "help": "页面必须具有跳过重复块的手段"
      },
    "color-contrast-enhanced": {
      "description": "确保前景色和背景色之间的对比度满足WCAG 2 AAA对比度比例阈值",
      "help": "元素必须具有足够的色彩对比度"
      },
    "color-contrast": {
      "description": "确保前景色和背景色之间的对比度满足WCAG 2 AA对比度阈值",
      "help": "元素必须具有足够的色彩对比度"
      },
    "css-orientation-lock": {
      "description": "确保内容不锁定在任何特定的显示方向上，并且内容在所有显示方向上可操作",
      "help": "CSS Media查询不能锁定显示方向"
    },
    "definition-list": {
      "description": "Ensures <dl> elements are structured correctly",
      "help": "<dl> elements must only directly contain properly-ordered <dt> and <dd> groups, <script>, <template> or <div> elements"
    },
    "dlitem": {
      "description": "Ensures <dt> and <dd> elements are contained by a <dl>",
      "help": "<dt> and <dd> elements must be contained by a <dl>"
    },
    "document-title": {
      "description": "Ensures each HTML document contains a non-empty <title> element",
      "help": "Documents must have <title> element to aid in navigation"
    },
      "empty-heading": {
      "description": "确保标题具有可辨识的文本",
      "help": "标题不应为空"
      },
      "empty-table-header": {
      "description": "确保表头具有可辨识的文本",
      "help": "表头文本不应为空"
      },
      "focus-order-semantics": {
      "description": "确保焦点顺序中的元素具有适用于交互内容的角色",
      "help": "焦点顺序中的元素应具有适当的角色"
      },
      "form-field-multiple-labels": {
      "description": "确保表单字段没有多个label元素",
      "help": "表单字段不应具有多个label元素"
    },
    "frame-focusable-content": {
      "description": "Ensures <frame> and <iframe> elements with focusable content do not have tabindex=-1",
      "help": "Frames with focusable content must not have tabindex=-1"
    },
    "frame-tested": {
      "description": "Ensures <iframe> and <frame> elements contain the axe-core script",
      "help": "Frames should be tested with axe-core"
    },
    "frame-title-unique": {
      "description": "Ensures <iframe> and <frame> elements contain a unique title attribute",
      "help": "Frames must have a unique title attribute"
    },
    "frame-title": {
      "description": "Ensures <iframe> and <frame> elements have an accessible name",
      "help": "Frames must have an accessible name"
    },
    "heading-order": {
      "description": "确保标题的顺序在语义上是正确的",
      "help": "标题级别应该只增加一个"
      },
      "hidden-content": {
      "description": "通知用户有关隐藏内容的存在",
      "help": "页面上的隐藏内容应该进行分析"
    },
    "html-has-lang": {
      "description": "确保每个HTML文档都有一个lang属性",
      "help": "<html>元素必须有一个lang属性"
    },
    "html-lang-valid": {
      "description": "确保<html>元素的lang属性有一个有效值",
      "help": "<html>元素的lang属性必须有一个有效值"
    },
    "html-xml-lang-mismatch": {
      "description": "确保具有有效lang和xml:lang属性的HTML元素在页面的基本语言上达成一致",
      "help": "带有lang和xml:lang属性的HTML元素必须具有相同的基础语言"
    },
    "identical-links-same-purpose": {
      "description": "确保具有相同可访问名称的链接具有相似的目的",
      "help": "具有相同名称的链接必须具有相似的目的"
    },
    "image-alt": {
      "description": "确保<img>元素具有替代文本或 role 属性为 none 或 presentation",
      "help": "图像必须有替代文本"
    },
    "image-redundant-alt": {
      "description": "确保图像的替代文本不会作为文本重复",
      "help": "图像的替代文本不应该作为文本重复出现"
    },
    "input-button-name": {
      "description": "确保输入按钮有可辨识的文本",
      "help": "输入按钮必须有可辨识的文本"
    },
    "input-image-alt": {
      "description": "确保<input type=\"image\">元素有替代文本",
      "help": "图像按钮必须有替代文本"
    },
    "label-content-name-mismatch": {
      "description": "Ensures that elements labelled through their content must have their visible text as part of their accessible name",
      "help": "Elements must have their visible text as part of their accessible name"
    },
    "label-title-only": {
      "description": "Ensures that every form element has a visible label and is not solely labeled using hidden labels, or the title or aria-describedby attributes",
      "help": "Form elements should have a visible label"
    },
    "label": {
      "description": "Ensures every form element has a label",
      "help": "Form elements must have labels"
    },
    "landmark-banner-is-top-level": {
      "description": "Ensures the banner landmark is at top level",
      "help": "Banner landmark should not be contained in another landmark"
    },
    "landmark-complementary-is-top-level": {
      "description": "Ensures the complementary landmark or aside is at top level",
      "help": "Aside should not be contained in another landmark"
    },
    "landmark-contentinfo-is-top-level": {
      "description": "Ensures the contentinfo landmark is at top level",
      "help": "Contentinfo landmark should not be contained in another landmark"
    },
    "landmark-main-is-top-level": {
      "description": "Ensures the main landmark is at top level",
      "help": "Main landmark should not be contained in another landmark"
    },
    "landmark-no-duplicate-banner": {
      "description": "Ensures the document has at most one banner landmark",
      "help": "Document should not have more than one banner landmark"
    },
    "landmark-no-duplicate-contentinfo": {
      "description": "Ensures the document has at most one contentinfo landmark",
      "help": "Document should not have more than one contentinfo landmark"
    },
    "landmark-no-duplicate-main": {
      "description": "确保文档最多只有一个主要地标",
      "help": "文档不应有多个主要地标"
      },
      "landmark-one-main": {
      "description": "确保文档有一个主要地标",
      "help": "文档应该有一个主要地标"
      },
      "landmark-unique": {
      "description": "确保地标是唯一的",
      "help": "地标应具有唯一的角色或角色/标签/标题（即可访问的名称）组合"
      },
      "link-in-text-block": {
      "description": "确保链接与周围文本有所区别，不依赖颜色",
      "help": "链接必须可以在不依赖颜色的情况下区分"
      },
      "link-name": {
      "description": "确保链接具有可辨识的文本",
      "help": "链接必须具有可辨识的文本"
    },
    "list": {
      "description": "Ensures that lists are structured correctly",
      "help": "<ul> and <ol> must only directly contain <li>, <script> or <template> elements"
    },
    "listitem": {
      "description": "Ensures <li> elements are used semantically",
      "help": "<li> elements must be contained in a <ul> or <ol>"
    },
    "marquee": {
      "description": "Ensures <marquee> elements are not used",
      "help": "<marquee> elements are deprecated and must not be used"
    },
    "meta-refresh-no-exceptions": {
      "description": "Ensures <meta http-equiv=\"refresh\"> is not used for delayed refresh",
      "help": "Delayed refresh must not be used"
    },
    "meta-refresh": {
      "description": "Ensures <meta http-equiv=\"refresh\"> is not used for delayed refresh",
      "help": "Delayed refresh under 20 hours must not be used"
    },
    "meta-viewport-large": {
      "description": "Ensures <meta name=\"viewport\"> can scale a significant amount",
      "help": "Users should be able to zoom and scale the text up to 500%"
    },
    "meta-viewport": {
      "description": "Ensures <meta name=\"viewport\"> does not disable text scaling and zooming",
      "help": "Zooming and scaling must not be disabled"
    },
    "nested-interactive": {
      "description": "Ensures interactive controls are not nested as they are not always announced by screen readers or can cause focus problems for assistive technologies",
      "help": "Interactive controls must not be nested"
    },
    "no-autoplay-audio": {
      "description": "Ensures <video> or <audio> elements do not autoplay audio for more than 3 seconds without a control mechanism to stop or mute the audio",
      "help": "<video> or <audio> elements must not play automatically"
    },
    "object-alt": {
      "description": "Ensures <object> elements have alternate text",
      "help": "<object> elements must have alternate text"
    },
    "p-as-heading": {
      "description": "Ensure bold, italic text and font-size is not used to style <p> elements as a heading",
      "help": "Styled <p> elements must not be used as headings"
    },
    "page-has-heading-one": {
      "description": "确保页面或其中的一个框架包含一级标题",
      "help": "页面应包含一级标题"
      },
      "presentation-role-conflict": {
      "description": "将被标记为表现性的元素不应该具有全局的ARIA或tabindex属性，以确保所有屏幕阅读器忽略它们",
      "help": "确保被标记为表现性的元素始终被忽略"
      },
      "region": {
      "description": "确保所有页面内容都包含在地标中",
      "help": "所有页面内容应该包含在地标中"
    },
    "role-img-alt": {
      "description": "Ensures [role='img'] elements have alternate text",
      "help": "[role='img'] elements must have an alternative text"
    },
    "scope-attr-valid": {
      "description": "确保在表格上正确使用scope属性",
      "help": "scope属性应该被正确使用"
      },
      "scrollable-region-focusable": {
      "description": "确保具有可滚动内容的元素可以通过键盘访问",
      "help": "可滚动区域必须具有键盘访问权限"
      },
      "select-name": {
      "description": "确保select元素具有可访问的名称",
      "help": "select元素必须具有可访问的名称"
      },
      "server-side-image-map": {
      "description": "确保不使用服务器端图像映射",
      "help": "不应使用服务器端图像映射"
    },
    "skip-link": {
      "description": "确保所有的跳转链接都有一个可聚焦的目标",
      "help": "跳转链接的目标应该存在并可聚焦"
      },
      "svg-img-alt": {
      "description": "确保具有img、graphics-document或graphics-symbol角色的<svg>元素具有可访问文本",
      "help": "具有img角色的<svg>元素必须有替代文本"
      },
      "tabindex": {
      "description": "确保tabindex属性值不大于0",
      "help": "元素的tabindex不应大于零"
      },
      "table-duplicate-name": {
      "description": "确保<caption>元素不包含与summary属性相同的文本",
      "help": "表格的summary和caption不应该相同"
      },
      "table-fake-caption": {
      "description": "确保具有标题的表格使用<caption>元素",
      "help": "数据表格不应使用数据或标题单元格来提供标题"
      },
      "target-size": {
      "description": "确保触摸目标具有足够的大小和空间",
      "help": "所有触摸目标必须是24px大，或者留有足够的空间"
    },
    "td-has-header": {
      "description": "确保<table>中每个大于3x3的非空数据单元格都有一个或多个表头",
      "help": "在较大的<table>中，非空的<td>元素必须有一个关联的表头"
      },
      "td-headers-attr": {
      "description": "确保使用headers属性的表格中的每个单元格只引用该表格中的其他单元格",
      "help": "使用headers属性的表格单元格必须只引用同一表格中的单元格"
      },
      "th-has-data-cells": {
      "description": "确保<th>元素和具有role=columnheader/rowheader的元素具有它们描述的数据单元格",
      "help": "数据表中的表头必须关联数据单元格"
      },
      "valid-lang": {
      "description": "确保lang属性具有有效的值",
      "help": "lang属性必须具有有效的值"
      },
      "video-caption": {
      "description": "确保<video>元素具有字幕",
      "help": "<video>元素必须具有字幕"
      }
  },
  "checks": {
    "abstractrole": {
      "pass": "抽象角色未被使用",
      "fail": {
        "singular": "不能直接使用抽象角色：${data.values}",
        "plural": "不能直接使用抽象角色：${data.values}"
      }
    },
    "aria-allowed-attr": {
      "pass": "定义的角色正确使用 ARIA 属性",
      "fail": {
        "singular": "不允许使用 ARIA 属性：${data.values}",
        "plural": "不允许使用 ARIA 属性：${data.values}"
      },
      "incomplete": "检查在该元素上忽略 ARIA 属性是否存在问题：${data.values}"
    },
    "aria-allowed-role": {
      "pass": "给定元素允许使用 ARIA 角色",
      "fail": {
        "singular": "给定元素不允许使用 ARIA 角色 ${data.values}",
        "plural": "给定元素不允许使用 ARIA 角色 ${data.values}"
      },
      "incomplete": {
        "singular": "当可见化元素时，必须删除 ARIA 角色 ${data.values}，因为对该元素不允许使用它",
        "plural": "当可见化元素时，必须删除 ARIA 角色 ${data.values}，因为对该元素不允许使用它们"
      }
    },
    "aria-busy": {
      "pass": "元素具有 aria-busy 属性",
      "fail": "元素没有 aria-busy=\"true\" 属性"
    },
    "aria-errormessage": {
      "pass": "存在 aria-errormessage 并引用对屏幕阅读器可见的元素，使用了受支持的 aria-errormessage 技术",
      "fail": {
        "singular": "aria-errormessage 值 ${data.values} 必须使用技术来宣布消息（例如 aria-live、aria-describedby、role=alert 等）",
        "plural": "aria-errormessage 值 ${data.values} 必须使用技术来宣布消息（例如 aria-live、aria-describedby、role=alert 等）",
        "hidden": "aria-errormessage 值 ${data.values} 不能引用隐藏元素"
      },
      "incomplete": {
        "singular": "确保 aria-errormessage 值 ${data.values} 引用现有元素",
        "plural": "确保 aria-errormessage 值${data.values} 引用现有元素",
        "idrefs": "无法确定页面上是否存在 aria-errormessage 元素：${data.values}"
      }
    },
    "aria-hidden-body": {
      "pass": "文档正文上没有 aria-hidden 属性",
      "fail": "文档正文上不应该存在 aria-hidden=true 属性"
    },
    "aria-level": {
      "pass": "aria-level 值有效",
      "incomplete": "在所有屏幕阅读器和浏览器组合中，不支持大于 6 的 aria-level 值"
    },
    "aria-prohibited-attr": {
      "pass": "允许使用 ARIA 属性",
      "fail": {
        "hasRolePlural": "不允许在具有角色 `${data.role}` 的元素中使用${data.prohibited} 属性。",
        "hasRoleSingular": "不允许在具有角色 `${data.role}` 的元素中使用${data.prohibited} 属性。",
        "noRolePlural": "在没有有效角色属性的 ${data.nodeName} 上不能使用 ${data.prohibited} 属性。",
        "noRoleSingular": "在没有有效角色属性的 ${data.nodeName} 上不能使用 ${data.prohibited} 属性。"
      },
      "incomplete": {
        "hasRoleSingular": "不建议将 ${data.prohibited} 属性与角色 `${data.role}` 一起使用。",
        "hasRolePlural": "不建议将 ${data.prohibited} 属性与角色 `${data.role}` 一起使用。",
        "noRoleSingular": "不建议在没有有效角色属性的 ${data.nodeName} 上使用 ${data.prohibited} 属性。",
        "noRolePlural": "不建议在没有有效角色属性的 ${data.nodeName} 上使用 ${data.prohibited} 属性。"
      }
    },
    "aria-required-attr": {
      "pass": "所有必需的 ARIA 属性都存在",
      "fail": {
        "singular": "缺少必需的 ARIA 属性：${data.values}",
        "plural": "缺少必需的 ARIA 属性：${data.values}"
      }
    },
    "aria-required-children": {
      "pass": "存在必需的 ARIA 子元素",
      "fail": {
        "singular": "缺少必需的 ARIA 子角色：${data.values}",
        "plural": "缺少必需的 ARIA 子角色：${data.values}",
        "unallowed": "元素有不允许的子元素（请参阅相关节点）"
      },
      "incomplete": {
        "singular": "期望添加 ARIA 子角色：${data.values}",
        "plural": "期望添加 ARIA 子角色：${data.values}"
      }
    },
    "aria-required-parent": {
      "pass": "存在必需的 ARIA 父角色",
      "fail": {
        "singular": "缺少必需的 ARIA 父角色：${data.values}",
        "plural": "缺少必需的 ARIA 父角色：${data.values}"
      }
    },
    "aria-roledescription": {
      "pass": "在支持的语义化角色上使用了 aria-roledescription",
      "incomplete": "检查 aria-roledescription 是否被受支持的屏幕阅读器宣读",
      "fail": "为元素设置支持 aria-roledescription 的角色"
    },
    "aria-unsupported-attr": {
      "pass": "支持使用 ARIA 属性",
      "fail": "ARIA 属性在屏幕阅读器和辅助技术中得到的广泛支持：${data.values}"
    },
    "aria-valid-attr-value": {
      "pass": "ARIA 属性值有效",
      "fail": {
        "singular": "ARIA 属性值无效：${data.values}",
        "plural": "ARIA 属性值无效：${data.values}"
      },
      "incomplete": {
        "noId": "页面上不存在 ARIA 属性元素 ID：${data.needsReview}",
        "noIdShadow": "页面上不存在 ARIA 属性元素 ID，或者该元素是另一个 Shadow DOM 树的后代：${data.needsReview}",
        "ariaCurrent": "ARIA 属性值无效，将作为“aria-current=true”处理：${data.needsReview}",
        "idrefs": "无法确定 ARIA 属性元素 ID 在页面上是否存在：${data.needsReview}",
        "empty": "ARIA 属性值为空时将被忽略：${data.needsReview}"
      }
    },
    "aria-valid-attr": {
      "pass": "ARIA 属性名有效",
      "fail": {
        "singular": "ARIA 属性名无效：${data.values}",
        "plural": "ARIA 属性名无效：${data.values}"
      }
    },
    "deprecatedrole": {
      "pass": "ARIA 角色未被弃用",
      "fail": "使用的角色被弃用了：${data}"
    },
    "fallbackrole": {
      "pass": "只使用一个角色值",
      "fail": "只使用一个角色值，因为在旧版浏览器中不支持回退角色",
      "incomplete": "只使用 'presentation' 或 'none' 角色，因为它们是同义词。"
    },
    "has-global-aria-attribute": {
      "pass": {
        "singular": "元素具有全局 ARIA 属性：${data.values}",
        "plural": "元素具有全局 ARIA 属性：${data.values}"
      },
      "fail": "元素没有全局 ARIA 属性"
    },
    "has-widget-role": {
      "pass": "元素具有小部件角色。",
      "fail": "元素没有小部件角色。"
    },
    "invalidrole": {
      "pass": "ARIA role is valid",
      "fail": {
        "singular": "Role must be one of the valid ARIA roles: ${data.values}",
        "plural": "Roles must be one of the valid ARIA roles: ${data.values}"
      }
    },
    "is-element-focusable": {
      "pass": "Element is focusable.",
      "fail": "Element is not focusable."
    },
    "no-implicit-explicit-label": {
      "pass": "There is no mismatch between a <label> and accessible name",
      "incomplete": "Check that the <label> does not need be part of the ARIA ${data} field's name"
    },
    "unsupportedrole": {
      "pass": "ARIA role is supported",
      "fail": "The role used is not widely supported in screen readers and assistive technologies: ${data}"
    },
    "valid-scrollable-semantics": {
      "pass": "Element has valid semantics for an element in the focus order.",
      "fail": "Element has invalid semantics for an element in the focus order."
    },
    "color-contrast-enhanced": {
      "pass": "Element has sufficient color contrast of ${data.contrastRatio}",
      "fail": {
        "default": "Element has insufficient color contrast of ${data.contrastRatio} (foreground color: ${data.fgColor}, background color: ${data.bgColor}, font size: ${data.fontSize}, font weight: ${data.fontWeight}). Expected contrast ratio of ${data.expectedContrastRatio}",
        "fgOnShadowColor": "Element has insufficient color contrast of ${data.contrastRatio} between the foreground and shadow color (foreground color: ${data.fgColor}, text-shadow color: ${data.shadowColor}, font size: ${data.fontSize}, font weight: ${data.fontWeight}). Expected contrast ratio of ${data.expectedContrastRatio}",
        "shadowOnBgColor": "Element has insufficient color contrast of ${data.contrastRatio} between the shadow color and background color (text-shadow color: ${data.shadowColor}, background color: ${data.bgColor}, font size: ${data.fontSize}, font weight: ${data.fontWeight}). Expected contrast ratio of ${data.expectedContrastRatio}"
      },
      "incomplete": {
        "default": "Unable to determine contrast ratio",
        "bgImage": "Element's background color could not be determined due to a background image",
        "bgGradient": "Element's background color could not be determined due to a background gradient",
        "imgNode": "Element's background color could not be determined because element contains an image node",
        "bgOverlap": "Element's background color could not be determined because it is overlapped by another element",
        "fgAlpha": "Element's foreground color could not be determined because of alpha transparency",
        "elmPartiallyObscured": "Element's background color could not be determined because it's partially obscured by another element",
        "elmPartiallyObscuring": "Element's background color could not be determined because it partially overlaps other elements",
        "outsideViewport": "Element's background color could not be determined because it's outside the viewport",
        "equalRatio": "Element has a 1:1 contrast ratio with the background",
        "shortTextContent": "Element content is too short to determine if it is actual text content",
        "nonBmp": "Element content contains only non-text characters",
        "pseudoContent": "Element's background color could not be determined due to a pseudo element"
      }
    },
    "color-contrast": {
      "pass": {
        "default": "Element has sufficient color contrast of ${data.contrastRatio}",
        "hidden": "Element is hidden"
      },
      "fail": {
        "default": "Element has insufficient color contrast of ${data.contrastRatio} (foreground color: ${data.fgColor}, background color: ${data.bgColor}, font size: ${data.fontSize}, font weight: ${data.fontWeight}). Expected contrast ratio of ${data.expectedContrastRatio}",
        "fgOnShadowColor": "Element has insufficient color contrast of ${data.contrastRatio} between the foreground and shadow color (foreground color: ${data.fgColor}, text-shadow color: ${data.shadowColor}, font size: ${data.fontSize}, font weight: ${data.fontWeight}). Expected contrast ratio of ${data.expectedContrastRatio}",
        "shadowOnBgColor": "Element has insufficient color contrast of ${data.contrastRatio} between the shadow color and background color (text-shadow color: ${data.shadowColor}, background color: ${data.bgColor}, font size: ${data.fontSize}, font weight: ${data.fontWeight}). Expected contrast ratio of ${data.expectedContrastRatio}"
      },
      "incomplete": {
        "default": "Unable to determine contrast ratio",
        "bgImage": "Element's background color could not be determined due to a background image",
        "bgGradient": "Element's background color could not be determined due to a background gradient",
        "imgNode": "Element's background color could not be determined because element contains an image node",
        "bgOverlap": "Element's background color could not be determined because it is overlapped by another element",
        "fgAlpha": "Element's foreground color could not be determined because of alpha transparency",
        "elmPartiallyObscured": "Element's background color could not be determined because it's partially obscured by another element",
        "elmPartiallyObscuring": "Element's background color could not be determined because it partially overlaps other elements",
        "outsideViewport": "Element's background color could not be determined because it's outside the viewport",
        "equalRatio": "Element has a 1:1 contrast ratio with the background",
        "shortTextContent": "Element content is too short to determine if it is actual text content",
        "nonBmp": "Element content contains only non-text characters",
        "pseudoContent": "Element's background color could not be determined due to a pseudo element"
      }
    },
    "link-in-text-block-style": {
      "pass": "Links can be distinguished from surrounding text by visual styling",
      "fail": "The link has no styling (such as underline) to distinguish it from the surrounding text"
    },
    "link-in-text-block": {
      "pass": "Links can be distinguished from surrounding text in some way other than by color",
      "fail": {
        "fgContrast": "The link has insufficient color contrast of ${data.contrastRatio}:1 with the surrounding text. (Minimum contrast is ${data.requiredContrastRatio}:1, link text: ${data.nodeColor}, surrounding text: ${data.parentColor})",
        "bgContrast": "The link background has insufficient color contrast of ${data.contrastRatio} (Minimum contrast is ${data.requiredContrastRatio}:1, link background color: ${data.nodeBackgroundColor}, surrounding background color: ${data.parentBackgroundColor})"
      },
      "incomplete": {
        "default": "Element's foreground contrast ratio could not be determined",
        "bgContrast": "Element's background contrast ratio could not be determined",
        "bgImage": "Element's contrast ratio could not be determined due to a background image",
        "bgGradient": "Element's contrast ratio could not be determined due to a background gradient",
        "imgNode": "Element's contrast ratio could not be determined because element contains an image node",
        "bgOverlap": "Element's contrast ratio could not be determined because of element overlap"
      }
    },
    "autocomplete-appropriate": {
      "pass": "the autocomplete value is on an appropriate element",
      "fail": "the autocomplete value is inappropriate for this type of input"
    },
    "autocomplete-valid": {
      "pass": "the autocomplete attribute is correctly formatted",
      "fail": "the autocomplete attribute is incorrectly formatted"
    },
    "accesskeys": {
      "pass": "Accesskey attribute value is unique",
      "fail": "Document has multiple elements with the same accesskey"
    },
    "focusable-content": {
      "pass": "Element contains focusable elements",
      "fail": "Element should have focusable content"
    },
    "focusable-disabled": {
      "pass": "No focusable elements contained within element",
      "incomplete": "Check if the focusable elements immediately move the focus indicator",
      "fail": "Focusable content should be disabled or be removed from the DOM"
    },
    "focusable-element": {
      "pass": "Element is focusable",
      "fail": "Element should be focusable"
    },
    "focusable-modal-open": {
      "pass": "No focusable elements while a modal is open",
      "incomplete": "Check that focusable elements are not tabbable in the current state"
    },
    "focusable-no-name": {
      "pass": "Element is not in tab order or has accessible text",
      "fail": "Element is in tab order and does not have accessible text",
      "incomplete": "Unable to determine if element has an accessible name"
    },
    "focusable-not-tabbable": {
      "pass": "No focusable elements contained within element",
      "incomplete": "Check if the focusable elements immediately move the focus indicator",
      "fail": "Focusable content should have tabindex='-1' or be removed from the DOM"
    },
    "frame-focusable-content": {
      "pass": "Element does not have focusable descendants",
      "fail": "Element has focusable descendants",
      "incomplete": "Could not determine if element has descendants"
    },
    "landmark-is-top-level": {
      "pass": "The ${data.role} landmark is at the top level.",
      "fail": "The ${data.role} landmark is contained in another landmark."
    },
    "no-focusable-content": {
      "pass": "Element does not have focusable descendants",
      "fail": {
        "default": "Element has focusable descendants",
        "notHidden": "Using a negative tabindex on an element inside an interactive control does not prevent assistive technologies from focusing the element (even with 'aria-hidden=true')"
      },
      "incomplete": "Could not determine if element has descendants"
    },
    "page-has-heading-one": {
      "pass": "Page has at least one level-one heading",
      "fail": "Page must have a level-one heading"
    },
    "page-has-main": {
      "pass": "Document has at least one main landmark",
      "fail": "Document does not have a main landmark"
    },
    "page-no-duplicate-banner": {
      "pass": "Document does not have more than one banner landmark",
      "fail": "Document has more than one banner landmark"
    },
    "page-no-duplicate-contentinfo": {
      "pass": "Document does not have more than one contentinfo landmark",
      "fail": "Document has more than one contentinfo landmark"
    },
    "page-no-duplicate-main": {
      "pass": "Document does not have more than one main landmark",
      "fail": "Document has more than one main landmark"
    },
    "tabindex": {
      "pass": "Element does not have a tabindex greater than 0",
      "fail": "Element has a tabindex greater than 0"
    },
    "alt-space-value": {
      "pass": "Element has a valid alt attribute value",
      "fail": "Element has an alt attribute containing only a space character, which is not ignored by all screen readers"
    },
    "duplicate-img-label": {
      "pass": "Element does not duplicate existing text in <img> alt text",
      "fail": "Element contains <img> element with alt text that duplicates existing text"
    },
    "explicit-label": {
      "pass": "Form element has an explicit <label>",
      "fail": "Form element does not have an explicit <label>",
      "incomplete": "Unable to determine if form element has an explicit <label>"
    },
    "help-same-as-label": {
      "pass": "Help text (title or aria-describedby) does not duplicate label text",
      "fail": "Help text (title or aria-describedby) text is the same as the label text"
    },
    "hidden-explicit-label": {
      "pass": "Form element has a visible explicit <label>",
      "fail": "Form element has explicit <label> that is hidden",
      "incomplete": "Unable to determine if form element has explicit <label> that is hidden"
    },
    "implicit-label": {
      "pass": "Form element has an implicit (wrapped) <label>",
      "fail": "Form element does not have an implicit (wrapped) <label>",
      "incomplete": "Unable to determine if form element has an implicit (wrapped} <label>"
    },
    "label-content-name-mismatch": {
      "pass": "Element contains visible text as part of it's accessible name",
      "fail": "Text inside the element is not included in the accessible name"
    },
    "multiple-label": {
      "pass": "Form field does not have multiple label elements",
      "incomplete": "Multiple label elements is not widely supported in assistive technologies. Ensure the first label contains all necessary information."
    },
    "title-only": {
      "pass": "Form element does not solely use title attribute for its label",
      "fail": "Only title used to generate label for form element"
    },
    "landmark-is-unique": {
      "pass": "Landmarks must have a unique role or role/label/title (i.e. accessible name) combination",
      "fail": "The landmark must have a unique aria-label, aria-labelledby, or title to make landmarks distinguishable"
    },
    "has-lang": {
      "pass": "The <html> element has a lang attribute",
      "fail": {
        "noXHTML": "The xml:lang attribute is not valid on HTML pages, use the lang attribute.",
        "noLang": "The <html> element does not have a lang attribute"
      }
    },
    "valid-lang": {
      "pass": "Value of lang attribute is included in the list of valid languages",
      "fail": "Value of lang attribute not included in the list of valid languages"
    },
    "xml-lang-mismatch": {
      "pass": "Lang and xml:lang attributes have the same base language",
      "fail": "Lang and xml:lang attributes do not have the same base language"
    },
    "dlitem": {
      "pass": "Description list item has a <dl> parent element",
      "fail": "Description list item does not have a <dl> parent element"
    },
    "listitem": {
      "pass": "List item has a <ul>, <ol> or role=\"list\" parent element",
      "fail": {
        "default": "List item does not have a <ul>, <ol> parent element",
        "roleNotValid": "List item does not have a <ul>, <ol> parent element without a role, or a role=\"list\""
      }
    },
    "only-dlitems": {
      "pass": "dl element only has direct children that are allowed inside; <dt>, <dd>, or <div> elements",
      "fail": "dl element has direct children that are not allowed: ${data.values}"
    },
    "only-listitems": {
      "pass": "List element only has direct children that are allowed inside <li> elements",
      "fail": "List element has direct children that are not allowed: ${data.values}"
    },
    "structured-dlitems": {
      "pass": "When not empty, element has both <dt> and <dd> elements",
      "fail": "When not empty, element does not have at least one <dt> element followed by at least one <dd> element"
    },
    "caption": {
      "pass": "The multimedia element has a captions track",
      "incomplete": "Check that captions is available for the element"
    },
    "frame-tested": {
      "pass": "The iframe was tested with axe-core",
      "fail": "The iframe could not be tested with axe-core",
      "incomplete": "The iframe still has to be tested with axe-core"
    },
    "no-autoplay-audio": {
      "pass": "<video> or <audio> does not output audio for more than allowed duration or has controls mechanism",
      "fail": "<video> or <audio> outputs audio for more than allowed duration and does not have a controls mechanism",
      "incomplete": "Check that the <video> or <audio> does not output audio for more than allowed duration or provides a controls mechanism"
    },
    "css-orientation-lock": {
      "pass": "Display is operable, and orientation lock does not exist",
      "fail": "CSS Orientation lock is applied, and makes display inoperable",
      "incomplete": "CSS Orientation lock cannot be determined"
    },
    "meta-viewport-large": {
      "pass": "<meta> tag does not prevent significant zooming on mobile devices",
      "fail": "<meta> tag limits zooming on mobile devices"
    },
    "meta-viewport": {
      "pass": "<meta> tag does not disable zooming on mobile devices",
      "fail": "${data} on <meta> tag disables zooming on mobile devices"
    },
    "target-offset": {
      "pass": "Target has sufficient offset from its closest neighbor (${data.closestOffset}px should be at least ${data.minOffset}px)",
      "fail": "Target has insufficient offset from its closest neighbor (${data.closestOffset}px should be at least ${data.minOffset}px)",
      "incomplete": {
        "default": "Element with negative tabindex has insufficient offset from its closest neighbor (${data.closestOffset}px should be at least ${data.minOffset}px). Is this a target?",
        "nonTabbableNeighbor": "Target has insufficient offset from a neighbor with negative tabindex (${data.closestOffset}px should be at least ${data.minOffset}px). Is the neighbor a target?"
      }
    },
    "target-size": {
      "pass": {
        "default": "Control has sufficient size (${data.width}px by ${data.height}px, should be at least ${data.minSize}px by ${data.minSize}px)",
        "obscured": "Control is ignored because it is fully obscured and thus not clickable"
      },
      "fail": {
        "default": "Target has insufficient size (${data.width}px by ${data.height}px, should be at least ${data.minSize}px by ${data.minSize}px)",
        "partiallyObscured": "Target has insufficient size because it is partially obscured (smallest space is ${data.width}px by ${data.height}px, should be at least ${data.minSize}px by ${data.minSize}px)"
      },
      "incomplete": {
        "default": "Element with negative tabindex has insufficient size (${data.width}px by ${data.height}px, should be at least ${data.minSize}px by ${data.minSize}px). Is this a target?",
        "contentOverflow": "Element size could not be accurately determined due to overflow content",
        "partiallyObscured": "Element with negative tabindex has insufficient size because it is partially obscured (smallest space is ${data.width}px by ${data.height}px, should be at least ${data.minSize}px by ${data.minSize}px). Is this a target?",
        "partiallyObscuredNonTabbable": "Target has insufficient size because it is partially obscured by a neighbor with negative tabindex (smallest space is ${data.width}px by ${data.height}px, should be at least ${data.minSize}px by ${data.minSize}px). Is the neighbor a target?"
      }
    },
    "header-present": {
      "pass": "Page has a heading",
      "fail": "Page does not have a heading"
    },
    "heading-order": {
      "pass": "Heading order valid",
      "fail": "Heading order invalid",
      "incomplete": "Unable to determine previous heading"
    },
    "identical-links-same-purpose": {
      "pass": "There are no other links with the same name, that go to a different URL",
      "incomplete": "Check that links have the same purpose, or are intentionally ambiguous."
    },
    "internal-link-present": {
      "pass": "Valid skip link found",
      "fail": "No valid skip link found"
    },
    "landmark": {
      "pass": "Page has a landmark region",
      "fail": "Page does not have a landmark region"
    },
    "meta-refresh-no-exceptions": {
      "pass": "<meta> tag does not immediately refresh the page",
      "fail": "<meta> tag forces timed refresh of page"
    },
    "meta-refresh": {
      "pass": "<meta> tag does not immediately refresh the page",
      "fail": "<meta> tag forces timed refresh of page (less than 20 hours)"
    },
    "p-as-heading": {
      "pass": "<p> elements are not styled as headings",
      "fail": "Heading elements should be used instead of styled <p> elements",
      "incomplete": "Unable to determine if <p> elements are styled as headings"
    },
    "region": {
      "pass": "All page content is contained by landmarks",
      "fail": "Some page content is not contained by landmarks"
    },
    "skip-link": {
      "pass": "Skip link target exists",
      "incomplete": "Skip link target should become visible on activation",
      "fail": "No skip link target"
    },
    "unique-frame-title": {
      "pass": "Element's title attribute is unique",
      "fail": "Element's title attribute is not unique"
    },
    "aria-label": {
      "pass": "aria-label attribute exists and is not empty",
      "fail": "aria-label attribute does not exist or is empty"
    },
    "aria-labelledby": {
      "pass": "aria-labelledby attribute exists and references elements that are visible to screen readers",
      "fail": "aria-labelledby attribute does not exist, references elements that do not exist or references elements that are empty",
      "incomplete": "ensure aria-labelledby references an existing element"
    },
    "avoid-inline-spacing": {
      "pass": "No inline styles with '!important' that affect text spacing has been specified",
      "fail": {
        "singular": "Remove '!important' from inline style ${data.values}, as overriding this is not supported by most browsers",
        "plural": "Remove '!important' from inline styles ${data.values}, as overriding this is not supported by most browsers"
      }
    },
    "button-has-visible-text": {
      "pass": "Element has inner text that is visible to screen readers",
      "fail": "Element does not have inner text that is visible to screen readers",
      "incomplete": "Unable to determine if element has children"
    },
    "doc-has-title": {
      "pass": "Document has a non-empty <title> element",
      "fail": "Document does not have a non-empty <title> element"
    },
    "exists": {
      "pass": "Element does not exist",
      "incomplete": "Element exists"
    },
    "has-alt": {
      "pass": "Element has an alt attribute",
      "fail": "Element does not have an alt attribute"
    },
    "has-visible-text": {
      "pass": "Element has text that is visible to screen readers",
      "fail": "Element does not have text that is visible to screen readers",
      "incomplete": "Unable to determine if element has children"
    },
    "important-letter-spacing": {
      "pass": "Letter-spacing in the style attribute is not set to !important, or meets the minimum",
      "fail": "letter-spacing in the style attribute must not use !important, or be at ${data.minValue}em (current ${data.value}em)"
    },
    "important-line-height": {
      "pass": "line-height in the style attribute is not set to !important, or meets the minimum",
      "fail": "line-height in the style attribute must not use !important, or be at ${data.minValue}em (current ${data.value}em)"
    },
    "important-word-spacing": {
      "pass": "word-spacing in the style attribute is not set to !important, or meets the minimum",
      "fail": "word-spacing in the style attribute must not use !important, or be at ${data.minValue}em (current ${data.value}em)"
    },
    "is-on-screen": {
      "pass": "Element is not visible",
      "fail": "Element is visible"
    },
    "non-empty-alt": {
      "pass": "Element has a non-empty alt attribute",
      "fail": {
        "noAttr": "Element has no alt attribute",
        "emptyAttr": "Element has an empty alt attribute"
      }
    },
    "non-empty-if-present": {
      "pass": {
        "default": "Element does not have a value attribute",
        "has-label": "Element has a non-empty value attribute"
      },
      "fail": "Element has a value attribute and the value attribute is empty"
    },
    "non-empty-placeholder": {
      "pass": "Element has a placeholder attribute",
      "fail": {
        "noAttr": "Element has no placeholder attribute",
        "emptyAttr": "Element has an empty placeholder attribute"
      }
    },
    "non-empty-title": {
      "pass": "Element has a title attribute",
      "fail": {
        "noAttr": "Element has no title attribute",
        "emptyAttr": "Element has an empty title attribute"
      }
    },
    "non-empty-value": {
      "pass": "Element has a non-empty value attribute",
      "fail": {
        "noAttr": "Element has no value attribute",
        "emptyAttr": "Element has an empty value attribute"
      }
    },
    "presentational-role": {
      "pass": "Element's default semantics were overriden with role=\"${data.role}\"",
      "fail": {
        "default": "Element's default semantics were not overridden with role=\"none\" or role=\"presentation\"",
        "globalAria": "Element's role is not presentational because it has a global ARIA attribute",
        "focusable": "Element's role is not presentational because it is focusable",
        "both": "Element's role is not presentational because it has a global ARIA attribute and is focusable",
        "iframe": "Using the \"title\" attribute on an ${data.nodeName} element with a presentational role behaves inconsistently between screen readers"
      }
    },
    "role-none": {
      "pass": "Element's default semantics were overriden with role=\"none\"",
      "fail": "Element's default semantics were not overridden with role=\"none\""
    },
    "role-presentation": {
      "pass": "Element's default semantics were overriden with role=\"presentation\"",
      "fail": "Element's default semantics were not overridden with role=\"presentation\""
    },
    "svg-non-empty-title": {
      "pass": "Element has a child that is a title",
      "fail": {
        "noTitle": "Element has no child that is a title",
        "emptyTitle": "Element child title is empty"
      },
      "incomplete": "Unable to determine element has a child that is a title"
    },
    "caption-faked": {
      "pass": "The first row of a table is not used as a caption",
      "fail": "The first child of the table should be a caption instead of a table cell"
    },
    "html5-scope": {
      "pass": "Scope attribute is only used on table header elements (<th>)",
      "fail": "In HTML 5, scope attributes may only be used on table header elements (<th>)"
    },
    "same-caption-summary": {
      "pass": "Content of summary attribute and <caption> are not duplicated",
      "fail": "Content of summary attribute and <caption> element are identical",
      "incomplete": "Unable to determine if <table> element has a caption"
    },
    "scope-value": {
      "pass": "Scope attribute is used correctly",
      "fail": "The value of the scope attribute may only be 'row' or 'col'"
    },
    "td-has-header": {
      "pass": "All non-empty data cells have table headers",
      "fail": "Some non-empty data cells do not have table headers"
    },
    "td-headers-attr": {
      "pass": "The headers attribute is exclusively used to refer to other cells in the table",
      "incomplete": "The headers attribute is empty",
      "fail": "The headers attribute is not exclusively used to refer to other cells in the table"
    },
    "th-has-data-cells": {
      "pass": "All table header cells refer to data cells",
      "fail": "Not all table header cells refer to data cells",
      "incomplete": "Table data cells are missing or empty"
    },
    "hidden-content": {
      "pass": "All content on the page has been analyzed.",
      "fail": "There were problems analyzing the content on this page.",
      "incomplete": "There is hidden content on the page that was not analyzed. You will need to trigger the display of this content in order to analyze it."
    }
  },
  "failureSummaries": {
    "any": {
      "failureMessage": "请修复以下任意问题：{{it:value}}\n  {{=value.split('\n').join('\n  ')}}{{}}"
    },
    "none": {
      "failureMessage": "请修复以下所有问题：{{it:value}}\n  {{=value.split('\n').join('\n  ')}}{{}}"
    }
  },
  "incompleteFallbackMessage": "斧无法确认原因。是时候打开元素检查器了！"
}
